#!/usr/bin/env bash
# dmenu script for (un)mounting disks and storage devices. Depends on udisks2.
# Author: Newman Sanchez (https://github.com/newmanls)

set -euo pipefail

notify() {
    printf "%s\n" "${@}"
    notify-send \
        -h string:x-dunst-stack-tag:dmenu_disks \
        -i 'drive-removable-media' \
        'udisks' "${@}"
}

notify_error() {
    printf "%s\n" "${@}"
    notify-send \
        -h string:x-dunst-stack-tag:dmenu_disks \
        -i 'dialog-error' \
        'udisks' "${@}"
}

mount_device() {
    devices=$(
        awk -F: '$2=="" {printf "%s %s(%s)\n",$1,$3,$4}' <<< "${devices}"
    )

    [ ! "${devices}" ] && notify "No devices for mounting" && exit 0

    device_action mount
}

unmount_device() {
    devices=$(
        awk -F: '$2!="" && length($2)>1 && $2!~/\/boot|\/efi|\/home$|SWAP/ \
            {printf "%s %s(%s)\n",$1,$3,$4}' <<< "${devices}"
    )

    [ ! "${devices}" ] && notify "No devices mounted" && exit 0

    device_action unmount
}

device_action() {
    action="${1}"
    chosen=$(dmenu -p "${action}" <<< "${devices}" | awk '{print $1}')

    if udisksctl "${action}" -b "${chosen}" > "${log}" 2>&1; then
        notify "$(cat "${log}")"
    else
        notify-error "$(cat "${log}")"
    fi
}

print_usage() {
    printf "%s\n" "Usage: dmenu_disks [mount | unmount]"
}

main() {
    log='/tmp/dmenu_disks.log'
    devices=$(
        lsblk -npryo name,fstype,mountpoint,label,size |
            tr ' ' ':' |
            awk -F: '$2!="" {printf "%s:%s:%s:%s\n",$1,$3,$4,$5}'
    )
    devices=$(printf "%b\n" "${devices}")

    case "${1}" in
        mount)     mount_device ;;
        unmount)   unmount_device ;;
        --help|-h) print_usage ;;
        *)         print_usage && exit 1 ;;
    esac
}

main "${1:-}"
