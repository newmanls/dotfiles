#!/usr/bin/env bash
# Simple screenshot dmenu script. Depends on imagemagick
# Author: Newman Sanchez (https://github.com/newmanls)

set -eo pipefail

gen_filename() {
    date +%Y%m%d_%H%M%S
}

is_recording() {
    pgrep ffmpeg > /dev/null 2>&1
}

print_help() {
    echo """
Usage: $(basename "$0") [option]

Options:
    -f      ${fullscreen}
    -w      ${window}
    -s      ${select}
    -t <n>  ${timer}. If no value is provided it will default to 3 seconds.
    -r      ${record}

If no options are supplied, a dmenu instance will show all available options.
If is recording, running the script with no arguments will stop the recording instead.
"""
}

start_recording() {
    ffmpeg -loglevel error \
        -f x11grab \
        -i :0.0 \
        -c:v libx264 \
        -quality realtime \
        -framerate 25 \
        -profile:v baseline \
        -pix_fmt yuv420p \
        "${savedir}/$(gen_filename).mp4" &

    echo "Record started" &&
        notify-send -i "record-desktop" "Record started" &
}

stop_recording() {
    pkill ffmpeg &&
        echo "Record stopped" &&
        notify-send -i "record-desktop" "Record stopped"
}

take_screenshot() {
    filepath="${savedir}/$(gen_filename).png"

    mkdir -p "${savedir}"
    import -silent "$@" "$filepath"

    [ ! -f "$filepath" ] && exit 1

    xclip -selection clipboard -t image/png -i "$filepath" &&
        notify-send \
            -i "$filepath" \
            -A "xdg-open ${filepath}"=Open \
            "Screenshot saved" \
            "You can also paste the image from the clipboard." |
            bash &
}

savedir="${HOME}/Pictures/Screenshots"
default_delay=3

fullscreen="Fullscreen"
window="Window"
select="Select region"
timer="Timer"
record="Start recording"
options="${fullscreen}\n${window}\n${select}\n${timer}\n${record}"

case "$1" in
    "-h") print_help && exit 0 ;;
    "-f") chosen="$fullscreen" ;;
    "-w") chosen="$window" ;;
    "-s") chosen="$select" ;;
    "-r") chosen="$record" ;;
    "-t")
        chosen="$timer"
        delay=${2:-"$default_delay"}

        if [[ "$delay" == *[!0-9]* ]]; then
            echo "Invalid delay value. Must be a number"
            exit 1
        fi
        ;;
    '')
        if is_recording; then
            stop_recording
            exit 0
        else
            chosen="$(printf "%b\n" "$options" | dmenu -p "Take screenshot")"
        fi
        ;;
    *) print_help && exit 1 ;;
esac

case "$chosen" in
    "$fullscreen") take_screenshot -window root ;;
    "$window")     take_screenshot -window "$(xdotool getactivewindow)" ;;
    "$select")     take_screenshot ;;
    "$timer")      take_screenshot -window root -pause "${delay:-"$default_delay"}" ;;
    "$record")     start_recording ;;
esac
