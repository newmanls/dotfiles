#!/usr/bin/env bash

set -Co pipefail

file="$1"
file_extension="${file##*.}"
file_extension="${file_extension@L}"
file_mimetype="$(file --dereference --brief --mime-type -- "${file}")"

pv_width="$(($2-3))"
pv_height="$3"
pv_x="$(($4+1))"
pv_y="$5"

hash() {
    stat --printf "%n\0%i\0%F\0%s\0%W\0%Y" "$(readlink -f "${file}")" |
        sha256sum | awk '{print $1}'
}

image_pv() {
    [ -n "${DISPLAY}" ] && [ -z "${WAYLAND_DISPLAY}" ] &&
        printf '{"action": "add", "identifier": "PREVIEW", "x": "%s", "y": "%s", "width": "%s", "height": "%s", "scaler": "contain", "path": "%s"}\n' \
        "${pv_x}" "${pv_y}" "${pv_width}" "${pv_height}" "${1}" > "${FIFO_UEBERZUG}"
}

thumbnail_pv() {
    thumbnails_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/lf/thumbnails/"
    thumbnail="${thumbnails_dir}/$(hash).jpg"

    if [ ! -f "${thumbnail}" ]; then
        mkdir -p "${thumbnails_dir}"

        case "${file_mimetype}" in
            application/pdf)
                pdftoppm -singlefile -jpeg "${file}" "${thumbnail%%.jpg}" ;;

            video/*)
                ffmpegthumbnailer -s 0 -i "${file}" -o "${thumbnail}" ;;

            image/svg+xml)
                magick -format jpg -background transparent "${file}" "${thumbnail}" ;;
        esac
    fi

    image_pv "${thumbnail}"
}

# Handle extension
case "${file_extension}" in
    7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|iso|jar|lha|lz|lzh|lzma| \
    lzo|rar|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)
        atool --list -- "${file}" && exit 1 ;;
esac

# Handle mimetype
case "${file_mimetype}" in
    application/pdf | video/* | image/svg+xml)
        thumbnail_pv && exit 1 ;;

    image/*)
        image_pv "${file}" && exit 1
        magick identify "$file" && exit 1
        ;;

    audio/*)
        id3v2 -l "$file" |
            sed 's/^\(id3v. tag info\) for .*/=== \1 ===/' |
            fold -sw "${pv_width}" &&
            exit 1
        ;;

    *opendocument*)
        odt2txt "${file}" && exit 1 ;;

    text/*|application/json|application/javascript)
        fold -sw "${pv_width}" "${file}" && exit 1 ;;
esac

printf "%s\n" "=== File Type Classification ===" \
    "$(file --dereference --brief -- "${file}")" |
    fold -sw "${pv_width}" && exit 1
